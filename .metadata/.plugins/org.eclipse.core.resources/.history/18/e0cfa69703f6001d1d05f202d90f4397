#Tomcat started on port(s): 8888 (http)
server.port = 8888
#default context-path는 /이다. ('' - 이름이 비어있음)
server.servlet.context-path=/app
# 추가
app.title = 신한금융아카데미 


# 스키마생성 (create, create-drop, update:변경 부분만 반영, validate, none)
# table을 자동생성할것인지 , 수동생성할것인지
# 큰규모의 프로젝트는 테이블을 별도로 생성하고 코드를 작성하는 것이 일반적이다.
spring.jpa.hibernate.ddl-auto=update
# DDL생성시 데이터베이스 고유의 기능을 사용하는가?
spring.jpa.generate-ddl=false
# 실행되는 SQL문을 보여줄 것인가?
spring.jpa.show-sql=true


#---------------------------------

#oracle DB 연동
#Dialect(방언) : 그지역에만 사용/ 즉, oracle은 oracle에서만 사용하는 것. (서로 다른점을 hibernate가 사용함?)
#Hibernate는 DB에 맞게 SQL문을 생성하기 위해 방언을 사용한다. ( 그 디비에 맞게 알아서 sql 문을 생성해줌)
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost/xe
spring.datasource.username=hr
spring.datasource.password=hr
spring.jpa.database=oracle
logging.level.org.hibernate=info
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect

#thymeleaf는 설정없이도 기본설정에 의해 수행가능하다.
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:templates/
spring.thymeleaf.check-template-location=true
spring.thymeleaf.suffix=.html 
#(확장자는 default로 html이다. )
# 캐시를 사용하지 않겠다. : 항상 최신것이 보인다. 
#thymeleaf를 사용하다 수정 사항이 생길 때 수정을 하면 재시작을 해줘야 한다. 
#이를 무시하고 브라우저 새로고침시 수정사항 반영을 위해 cache=false로 설정한다.
#운영시는 true로 설정한다. 
spring.thymeleaf.cache=false 

#Not Found설정
#spring.mvc.throw-exception-if-no-handler-found=true
#ture 설정 : dispatcher servlet에서 요청에 대한 핸들러를 찾을 때 
#요청을 처리할 수 있는 핸들러가 없다면 즉, mappedHandler가 null이라면 	#NoHandlerFoundException예외를 던진다.
#false라면 BasicErrorController에서 응답을 반환한다.

#temp에 업로드 하고 싶다. 
spring.servlet.multipart.location=c:\\temp
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=50MB


























