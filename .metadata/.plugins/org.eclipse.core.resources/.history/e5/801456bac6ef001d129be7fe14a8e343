package com.shinhan.education;

import java.util.List;
import java.util.Optional;
import java.util.stream.IntStream;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

import com.shinhan.education.repository.BoardRepository;
import com.shinhan.education.repository.JobsRepository;
import com.shinhan.education.vo.BoardVO;
import com.shinhan.education.vo.JobVO;

@SpringBootTest
public class JobTest {

	@Autowired
	JobsRepository repo;
	BoardRepository boardRepo;
	
	//@Test
	public void retrieve2() {
		List<BoardVO> blist = repo.findByContent("게시글내용....20");
		blist.forEach(board->{
			System.out.println(board);
		});
	}
	
	
	//@Test
	public void retrieve1() {
		List<BoardVO> blist = repo.findByTitle("제목수정");
		blist.forEach(board->{
			System.out.println(board);
		});
	}
	
	//@Test // 모두 지우기 
	public void test6() {
		// CRUD ... delete 
		repo.deleteAll();
		
	}
	
	//@Test
	public void test5() {
		// CRUD ... delete 
		repo.findById("직책코드7nn").ifPresent(job->{
			repo.delete(job);
		});
		
	}
	
	//@Test
	public void test4() {
		// CRUD ... update
		repo.findById("직책코드1nn").ifPresent(job->{
			job.setJobTitle("마켓팅-수정");
			job.setMaxSalar(10000);
			job.setMinSalary(9000);
			repo.save(job);
		});
		
	}

	//@Test
	public void test3() {
		// CRUD ... create
		Optional<JobVO> jobOptional =  repo.findById("직책코드1");
		if(jobOptional.isPresent()) {
			JobVO job = jobOptional.get();
			System.out.println(job);
		} else {
			System.out.println("존재하는 직책이 없다. ");
		}
		JobVO job = repo.findById("직책코드!!").orElse(null);
		if(job == null) {
			System.out.println("존재하는 직책이 없다");
		}else {
			System.out.println(job);
		}
	}
	
	
	//@Test
	public void test2() {
		// CRUD ... create

		String[] arr = { "마켓팅", "si 개발자", "sm 개발자", "메니져", "AA", "ww", "Sw", "rr", "wwdd", "33" };

		Iterable<JobVO> datas = repo.findAll();
		List<JobVO> joblist = (List<JobVO>) datas;
		for(JobVO job : joblist) {
			System.out.println(job);
		}
	}

	// @Test
	public void test1() {
		// CRUD ... create

		String[] arr = { "마켓팅", "si 개발자", "sm 개발자", "메니져", "AA", "ww", "Sw", "rr", "wwdd", "33" };

		IntStream.range(0, 10).forEach(i -> {
			JobVO job = JobVO.builder().jobId("직책코드" + (i) + "nn").jobTitle(arr[i]).minSalary(1000).maxSalar(5000)
					.build();
			repo.save(job);
		});
	}
}
